-- 강의실 - 부서
-- 학생 - 사원
SELECT c.* FROM classroom c;
SELECT s.* FROM student s;

-- 새로 강의실테이블 생성
CREATE TABLE CLASSROOM1
(
  CODE CHAR(1) NOT NULL,
  ROOM VARCHAR2(20),
  CONSTRAINT PK_CLASSROOM1 PRIMARY KEY (CODE)
);

-- 테이블에 자료추가
INSERT ALL
INTO classroom1 (CODE, ROOM)
VALUES ('A', '301호')
INTO classroom1 (CODE, ROOM)
VALUES ('B', '302호')
INTO classroom1 (CODE, ROOM)
VALUES ('C', '303호')
INTO classroom1 (CODE, ROOM)
VALUES ('D', '304호')
SELECT * FROM DUAL;

-- 학생 테이블 생성
CREATE TABLE STUDENT1
(
NO NUMBER NOT NULL,
NAME VARCHAR2(20) NOT NULL,
CODE CHAR(1),
KOR NUMBER(3),
ENG NUMBER(3),
MATH NUMBER(3),
GRADE VARCHAR2(10),
  CONSTRAINT PK_STUDENT1 PRIMARY KEY (NO)
);
 
ALTER TABLE STUDENT1 
	ADD CONSTRAINT GRADE_CON 
		CHECK(GRADE IN('1학년', '2학년', '3학년', '4학년')); 

DROP TABLE STUDENT1 CASCADE CONSTRAINTS;

-- 학생테이블의 CODE는 강의실 CODE의 외래키 제약조건(조건명: FK_STUDENT1_CODE)
ALTER TABLE STUDENT1
	ADD CONSTRAINT FK_STUDENT1_CODE
    	FOREIGN KEY (CODE)
    REFERENCES CLASSROOM1 (CODE);
    
-- 시퀀스 생성 SEQ_STUDENT1_NO 시작값101 증가값1
CREATE SEQUENCE SEQ_STUDENT1_NO INCREMENT BY 1 START WITH 101 NOMAXVALUE NOCACHE;

-- 시퀀스를 이용한 학생 5명 추가

INSERT INTO STUDENT1 (NO, NAME, CODE, KOR, ENG, MATH, GRADE)
VALUES (SEQ_STUDENT1_NO.NEXTVAL, '이름1', 'A', 89, 87, 92, '1학년');
INSERT INTO STUDENT1 (NO, NAME, CODE, KOR, ENG, MATH, GRADE)
VALUES (SEQ_STUDENT1_NO.NEXTVAL, '이름2', 'B', 99, 76, 52, '2학년');
INSERT INTO STUDENT1 (NO, NAME, CODE, KOR, ENG, MATH, GRADE)
VALUES (SEQ_STUDENT1_NO.NEXTVAL, '이름3', 'D', 80, 87, 93, '3학년');
INSERT INTO STUDENT1 (NO, NAME, CODE, KOR, ENG, MATH, GRADE)
VALUES (SEQ_STUDENT1_NO.NEXTVAL, '이름4', 'C', 89, 67, 97, '4학년');
INSERT INTO STUDENT1 (NO, NAME, CODE, KOR, ENG, MATH, GRADE)
VALUES (SEQ_STUDENT1_NO.NEXTVAL, '이름6', 'B', 100, 77, 72, '2학년');

COMMIT;
ROLLBACK;

SELECT * FROM STUDENT1;
SELECT * FROM CLASSROOM1;

-- CASE / WHEN/ THEN 
-- 각 학생들의 정보조회. 점수 총합이 250~300 A, 200~249 B, 나머지는 C, (학번, 이름, 국,영,수, 총합)
SELECT NO, NAME, KOR, ENG, MATH, (KOR + ENG + MATH) TOTAL FROM STUDENT1 ;
SET SERVEROUTPUT ON;

SELECT no, NAME, KOR, ENG, MATH, (KOR + ENG + MATH) TOTAL, 
        CASE 
        WHEN KOR + ENG + MATH >=250 AND KOR + ENG + MATH <=300 THEN 'A'
        WHEN KOR + ENG + MATH >=200 AND KOR + ENG + MATH <=249 THEN 'B'
        ELSE 'C'
       END AS SCORE
    FROM STUDENT1;

-- 학년별 수학점수 합계 구하기
----- 배달자별 배달건수(어떤 라이더가 배달을 많이 했는가?)
SELECT GRADE, SUM(MATH)
FROM STUDENT1 GROUP BY GRADE;

-- 삭제, 수정,
-- 학생삭제 (반성공)
-- 왜 UPDATE는 안되고 DELETE는 되지?
UPDATE STUDENT1
SET NAME='', KOR='', ENG='', MATH=''
WHERE NO = 115;

DELETE FROM STUDENT1
WHERE NO = 115;

-- 학생수정 (성공)
UPDATE STUDENT1
SET NAME='누구', KOR='22', ENG='44', MATH='33'
WHERE NO = 110;

--함수만들기, 시퀀스번호를 반환하는 함수 생성하기 FUNC_NETXTVAL
CREATE OR REPLACE FUNCTION FUNC_NETXTVAL RETURN NUMBER
IS
BEGIN 
    RETURN SEQ_STUDENT1_NO.NEXTVAL;
EXCEPTION WHEN OTHERS THEN
    RETURN NULL;
END;
/
    
